const { defineConfig } = require("eslint/config");
const expoConfig = require("eslint-config-expo/flat");
const eslintPluginPrettierRecommended = require("eslint-plugin-prettier/recommended");
const eslintPluginReactNative = require("eslint-plugin-react-native");

module.exports = defineConfig([
  expoConfig,
  eslintPluginPrettierRecommended,
  {
    plugins: {
      "react-native": eslintPluginReactNative,
    },
    rules: {
      "react-native/no-unused-styles": "error",
    },
  },
]);

// first install npx expo lint - linter
// Then install plugin - npx expo install -- --save-dev prettier eslint-config-prettier eslint-plugin-prettier eslint-plugin-react-native
// update eslint.config.js with code above
// then npx expo lint --fix

// for import alias resolving

// const { defineConfig } = require("eslint/config");
// const expoConfig = require("eslint-config-expo/flat");
// const eslintPluginPrettierRecommended = require("eslint-plugin-prettier/recommended");
// const eslintPluginReactNative = require("eslint-plugin-react-native");

// module.exports = defineConfig([
//   expoConfig,
//   eslintPluginPrettierRecommended,
//   {
//     plugins: {
//       "react-native": eslintPluginReactNative,
//     },
//     settings: {
//       "import/resolver": {
//         typescript: {
//           alwaysTryTypes: true,
//           project: "./tsconfig.json",
//         },
//         alias: {
//           map: [["@", "./"]],
//           extensions: [".js", ".jsx", ".ts", ".tsx", ".json"],
//         },
//       },
//     },
//     rules: {
//       "react-native/no-unused-styles": "error",
//       "import/no-unresolved": "error",
//     },
//   },
// ]);
